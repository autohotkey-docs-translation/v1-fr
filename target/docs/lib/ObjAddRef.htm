<!DOCTYPE HTML>
<html lang="fr">
<head>
<title>ObjAddRef() / ObjRelease() - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The ObjAddRef and ObjRelease functions increment or decrement an object's reference count." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>


<h1>ObjAddRef() / ObjRelease() <span class="ver">[AHK_L 53+]</span></h1>

<p>Increments or decrements an object's <a href="../Objects.htm#Reference_Counting">reference count</a>.</p>

<pre class="Syntax"><span class="func">ObjAddRef</span>(Ptr)<br><span class="func">ObjRelease</span>(Ptr)</pre>
<h2>Parameters</h2>
<dl>

  <dt>Ptr</dt>
  <dd><p>An unmanaged object pointer or COM interface pointer.</p></dd>

</dl>

<h2>Return Value</h2>
<p>These functions return the new reference count. This value should be used <b>only</b> for debugging purposes.</p>

<h2>Related</h2>
<p><a href="../Objects.htm#Reference_Counting">Reference Counting</a></p>
<p>Although the following articles discuss reference counting as it applies to COM, they cover some important concepts and rules which generally also apply to AutoHotkey objects: <a href="http://msdn.microsoft.com/en-us/library/ms691379.aspx">IUnknown::AddRef</a>, <a href="http://msdn.microsoft.com/en-us/library/ms682317.aspx">IUnknown::Release</a>, <a href="https://msdn.microsoft.com/en-us/library/ms692481.aspx">Reference Counting Rules</a>.</p>

<h2>Exemples</h2>
<p>See <a href="ComObjConnect.htm#Examples">ComObjConnect()</a>.</p>

<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>obj := Object()

<em>; The following two lines are equivalent:</em>
ptr1 := <a href="../Objects.htm#AddressCast">Object</a>(obj)
ptr2 := ObjectToPointer(obj)

ObjectToPointer(obj) {
    if !IsObject(obj)
        return ""
    ptr := &amp;obj
    ObjAddRef(ptr)
    return ptr
}

<em>; Each pointer retrieved via Object() or ObjectToPointer() must be manually released
; to allow the object to be eventually freed and any memory used by it reclaimed.</em>
ObjRelease(ptr2)
ObjRelease(ptr1)
</pre>
</div>

</body>
</html>
